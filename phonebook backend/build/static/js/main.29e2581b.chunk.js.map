{"version":3,"sources":["components/Filter.js","components/Persons.js","components/NewNumbers.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","filters","setFilters","value","onChange","e","target","Person","persons","handleDelete","filter","person","name","toLowerCase","includes","map","key","number","type","onClick","id","NewNumbers","handleNameChange","handleNumberChange","handleSubmit","newName","newNumber","onSubmit","Notification","message","className","baseUrl","axios","get","then","response","data","newObject","post","put","App","useState","setPersons","setNewName","setNewNumber","errorMessage","setErrorMessage","updatePerson","userObject","personService","updateInfo","setTimeout","console","log","useEffect","innititalPersons","undefined","preventDefault","existingUserId","contact","exists","i","length","window","confirm","returnedPersons","concat","Persons","confirmation","afterDelete","catch","err","ReactDOM","render","document","getElementById"],"mappings":"mNAaeA,EAXA,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WAIzB,OACE,kDACmB,2BAAOC,MAAOF,EAASG,SALjB,SAACC,GAC1BH,EAAWG,EAAEC,OAAOH,YCkBTI,EApBA,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,QAASP,EAA4B,EAA5BA,QAASQ,EAAmB,EAAnBA,aAClC,OACE,6BACGD,EACEE,QAAO,SAACC,GAAD,OAAYA,EAAOC,KAAKC,cAAcC,SAASb,MACtDc,KAAI,SAACJ,GAAD,OACH,uBAAGK,IAAKL,EAAOC,MACZD,EAAOC,KADV,IACiBD,EAAOM,OAAQ,IAC9B,4BACEC,KAAK,SACLC,QAAS,kBAAMV,EAAaE,EAAOS,GAAIT,EAAOC,QAFhD,gBCgBGS,EAxBI,SAAC,GAMb,IALLC,EAKI,EALJA,iBACAC,EAII,EAJJA,mBACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,QACAC,EACI,EADJA,UAEA,OACE,6BACE,0BAAMC,SAAUH,GACd,sCACQ,2BAAOrB,MAAOsB,EAASrB,SAAUkB,KAEzC,wCACU,2BAAOnB,MAAOuB,EAAWtB,SAAUmB,KAE7C,6BACE,4BAAQL,KAAK,UAAb,WCRKU,EATM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAEtB,OAAgB,OAAZA,EACK,KAGF,yBAAKC,UAAWD,EAAQ,IAAKA,EAAQ,K,gBCPxCE,EAAU,eAsBD,EApBA,WAEb,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAACC,GAAD,OAAcA,EAASC,SAkB9B,EAfA,SAACC,GAEd,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAACC,GAAD,OAAcA,EAASC,SAa9B,EAVA,SAAChB,EAAIiB,GAElB,OADgBL,IAAMO,IAAN,UAAaR,EAAb,YAAwBX,GAAMiB,GAC/BH,MAAK,SAACC,GAAD,OAAcA,EAASC,SAQ9B,EALA,SAAChB,GAEd,OADgBY,IAAMO,IAAN,UAAaR,EAAb,YAAwBX,IACzBc,MAAK,SAACC,GAAD,OAAcA,EAASC,SCyG9BI,EApHH,WAAO,IAAD,EACcC,mBAAS,IADvB,mBACTjC,EADS,KACAkC,EADA,OAEcD,mBAAS,IAFvB,mBAEThB,EAFS,KAEAkB,EAFA,OAGkBF,mBAAS,IAH3B,mBAGTf,EAHS,KAGEkB,EAHF,OAIcH,mBAAS,IAJvB,mBAITxC,EAJS,KAIAC,EAJA,OAKwBuC,mBAAS,MALjC,mBAKTI,EALS,KAKKC,EALL,KAwEVC,EAAe,SAAC3B,EAAI4B,GACxBC,EAAqB7B,EAAI4B,GAAYd,MAAK,SAACgB,GACzCR,EACElC,EAAQO,KAAI,SAACJ,GAAD,OAAaA,EAAOS,KAAOA,EAAKT,EAASuC,MAEvDJ,EAAgB,CAAC,GAAD,OAAIrB,EAAJ,qBAAgC,YAChD0B,YAAW,kBAAML,EAAgB,QAAO,KACxCM,QAAQC,IAAI7C,OAchB,OAFA8C,qBAToB,WAClBL,IAEGf,MAAK,SAACqB,GAAD,OACJb,EACEa,EAAiB7C,QAAO,SAACC,GAAD,YAA4B6C,IAAhB7C,EAAOC,cAI5B,IAGrB,6BACE,yCACA,kBAAC,EAAD,CAAciB,QAASgB,IACvB,kBAAC,EAAD,CAAQ5C,QAASA,EAASC,WAAYA,IACtC,yCACA,kBAAC,EAAD,CACEoB,iBA7FmB,SAACjB,GACxBsC,EAAWtC,EAAEC,OAAOH,QA6FhBoB,mBA3FqB,SAAClB,GAC1BuC,EAAavC,EAAEC,OAAOH,QA2FlBqB,aAxFe,SAACnB,GACpBA,EAAEoD,iBAKF,IAHA,IAEIC,EAFEC,EAAU,CAAE/C,KAAMa,EAASR,OAAQS,GACrCkC,GAAS,EAEJC,EAAI,EAAGA,EAAIrD,EAAQsD,OAAQD,IAE9BrD,EAAQqD,GAAGjD,KAAKC,gBAAkBY,EAAQZ,gBAC5C+C,GAAS,EACTF,EAAiBlD,EAAQqD,GAAGzC,IAIhCwC,EACIG,OAAOC,QAAP,UACKvC,EADL,wEAGEsB,EAAaW,EAAgBC,GAC7BP,QAAQC,IAAI,aACdJ,EAAqBU,GAASzB,MAAK,SAAC+B,GAClCvB,EAAWlC,EAAQ0D,OAAOD,IAC1BnB,EAAgB,CAAC,SAAD,OAAUrB,EAAV,KAAsB,YACtC0B,YAAW,kBAAML,EAAgB,QAAO,SAkE1CrB,QAASA,EACTC,UAAWA,IAEb,uCACA,kBAACyC,EAAD,CACE3D,QAASA,EACTP,QAASA,EACTQ,aArEe,SAACW,EAAIR,GACxBwC,QAAQC,IAAI,KAAMjC,GAClB,IAAMgD,EAAeL,OAAOC,QAAP,iBAAyBpD,IAC9CwC,QAAQC,IAAIe,GAEZA,EACInB,EACU7B,GACPc,MAAK,SAACC,GACLiB,QAAQC,IAAI,UAAWlB,GACvBW,EAAgB,CAAC,GAAD,OACXlC,EADW,kCAEd,WAEFuC,YAAW,kBAAML,EAAgB,QAAO,KACxC,IAAMuB,EAAc7D,EAAQE,QAC1B,SAACC,GAAD,OAAYA,EAAOS,KAAOe,EAASf,MAErCgC,QAAQC,IAAI,QAASgB,GACrB3B,EAAW2B,MAEZC,OAAM,SAACC,GACNzB,EAAgB,CAAC,GAAD,OACXlC,EADW,6CAEd,WAEFuC,YAAW,kBAAML,EAAgB,QAAO,QAE5CM,QAAQC,IAAI,oB,MCzEpBmB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.29e2581b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Filter = ({ filters, setFilters }) => {\r\n  const handleFilterChange = (e) => {\r\n    setFilters(e.target.value);\r\n  };\r\n  return (\r\n    <form>\r\n      filter show with <input value={filters} onChange={handleFilterChange} />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\n\r\nconst Person = ({ persons, filters, handleDelete }) => {\r\n  return (\r\n    <div>\r\n      {persons\r\n        .filter((person) => person.name.toLowerCase().includes(filters))\r\n        .map((person) => (\r\n          <p key={person.name}>\r\n            {person.name} {person.number}{\" \"}\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => handleDelete(person.id, person.name)}\r\n            >\r\n              delete\r\n            </button>\r\n          </p>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Person;\r\n","import React from \"react\";\r\n\r\nconst NewNumbers = ({\r\n  handleNameChange,\r\n  handleNumberChange,\r\n  handleSubmit,\r\n  newName,\r\n  newNumber,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          name: <input value={newName} onChange={handleNameChange} />\r\n        </div>\r\n        <div>\r\n          number: <input value={newNumber} onChange={handleNumberChange} />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewNumbers;\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ message }) => {\r\n  // console.log(message);\r\n  if (message === null) {\r\n    return null;\r\n  }\r\n\r\n  return <div className={message[1]}>{message[0]}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import axios from \"axios\";\r\nconst baseUrl = \"/api/persons\";\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst remove = (id) => {\r\n  const request = axios.put(`${baseUrl}/${id}`);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default { getAll, create, update, remove };\r\n","import React, { useState, useEffect } from \"react\";\n\nimport Filter from \"./components/Filter\";\nimport Persons from \"./components/Persons\";\nimport NewNumbers from \"./components/NewNumbers\";\nimport Notification from \"./components/Notification\";\n\nimport personService from \"./services/persons\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [filters, setFilters] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const handleNameChange = (e) => {\n    setNewName(e.target.value);\n  };\n  const handleNumberChange = (e) => {\n    setNewNumber(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const contact = { name: newName, number: newNumber };\n    let exists = false;\n    let existingUserId;\n    for (let i = 0; i < persons.length; i++) {\n      //Check if the contact name is not alreayd added\n      if (persons[i].name.toLowerCase() === newName.toLowerCase()) {\n        exists = true;\n        existingUserId = persons[i].id;\n      }\n    }\n\n    exists\n      ? window.confirm(\n          `${newName} is already added to phonebook, replace the old one with a new one?`\n        )\n        ? updatePerson(existingUserId, contact)\n        : console.log(\"Not added\")\n      : personService.create(contact).then((returnedPersons) => {\n          setPersons(persons.concat(returnedPersons));\n          setErrorMessage([`Added ${newName} `, \"success\"]);\n          setTimeout(() => setErrorMessage(null), 5000);\n        });\n  };\n\n  const handleDelete = (id, name) => {\n    console.log(\"id\", id);\n    const confirmation = window.confirm(`Delete ${name}`);\n    console.log(confirmation);\n\n    confirmation\n      ? personService\n          .remove(id)\n          .then((response) => {\n            console.log(\"deleted\", response);\n            setErrorMessage([\n              `${name} has succeccfully been deleted`,\n              \"danger\",\n            ]);\n            setTimeout(() => setErrorMessage(null), 5000);\n            const afterDelete = persons.filter(\n              (person) => person.id !== response.id\n            );\n            console.log(\"after\", afterDelete);\n            setPersons(afterDelete);\n          })\n          .catch((err) => {\n            setErrorMessage([\n              `${name} has already been removed from the server`,\n              \"danger\",\n            ]);\n            setTimeout(() => setErrorMessage(null), 5000);\n          })\n      : console.log(\"not deleted\");\n  };\n\n  const updatePerson = (id, userObject) => {\n    personService.update(id, userObject).then((updateInfo) => {\n      setPersons(\n        persons.map((person) => (person.id !== id ? person : updateInfo))\n      );\n      setErrorMessage([`${newName} has been updated`, \"success\"]);\n      setTimeout(() => setErrorMessage(null), 5000);\n      console.log(persons);\n    });\n  };\n  const personsHook = () => {\n    personService\n      .getAll()\n      .then((innititalPersons) =>\n        setPersons(\n          innititalPersons.filter((person) => person.name !== undefined)\n        )\n      );\n  };\n  useEffect(personsHook, []);\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={errorMessage} />\n      <Filter filters={filters} setFilters={setFilters} />\n      <h2>Add a new</h2>\n      <NewNumbers\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n        handleSubmit={handleSubmit}\n        newName={newName}\n        newNumber={newNumber}\n      />\n      <h2>Numbers</h2>\n      <Persons\n        persons={persons}\n        filters={filters}\n        handleDelete={handleDelete}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}